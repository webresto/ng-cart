import { Component, Input, Output, EventEmitter, Inject } from '@angular/core';
import { NgRestoCartService } from "../../services/ng-restocart.service";
import { EventerService, EventMessage } from '@webresto/ng-core/dist';
export class DishCalcComponent {
    constructor(cartService, eventer, imageUrl) {
        this.cartService = cartService;
        this.eventer = eventer;
        this.validate = new EventEmitter();
        this.amountDishToAdd = new EventEmitter();
        this.comment = new EventEmitter();
        this.modifiers = {
            indexById: {},
            custom: {
                fixed: null
            },
            baseList: [],
        };
        this.modifiersValueTree = {};
        this.twoPartsAssembledModifiersIdsByGroupId = {};
        this.imageUrl = imageUrl;
    }
    ngOnInit() {
        this.checkValid();
    }
    ngOnDestroy() {
        this.validate.emit(true);
        this.cartService.setModifires([], []);
    }
    ngOnChanges() {
        this.modifiers = {
            indexById: {},
            custom: {
                fixed: null
            },
            baseList: [],
        };
        this.modifiersValueTree = {};
        if (this.dish && this.dish.modifiers) {
            for (let modifier of this.dish.modifiers) {
                let modifierType = null;
                // Indexing
                this.modifiers.indexById[modifier.modifierId] = modifier;
                // Check Custom modifiers (like Pizza Size)
                if (!this.modifiers.custom.fixed
                    && !this.modifiers.baseList.length
                    && modifier.childModifiers
                    && modifier.childModifiers.length == 2
                    && modifier.maxAmount == modifier.maxAmount
                    && modifier.maxAmount == 1) {
                    // This is Pizza Size modifier
                    modifierType = 'custom';
                    this.modifiers.custom.fixed = modifier;
                    console.info('Custom Fixed modifier:', modifier);
                }
                else if (modifier.group
                    && modifier.childModifiers
                    && modifier.childModifiers.length
                    && modifier.childModifiers.find(m => m.dish)) {
                    // This is Base modifier
                    modifierType = 'group';
                    this.modifiers.baseList.push(modifier);
                    if (modifier.minAmount == 2 && modifier.maxAmount == 2) {
                        this.isTwoPartsAssembledTemplate = true;
                    }
                    console.info('Group modifier:', modifier);
                }
                else if (modifier.dish) {
                    modifierType = 'single';
                    this.modifiers.baseList.push(modifier);
                    console.info('Single modifier:', modifier);
                }
                else {
                    // This is broken modifier
                    modifierType = 'broken';
                    console.warn('Broken modifier:', modifier);
                }
                // Init default values
                switch (modifierType) {
                    case 'group':
                    case 'custom':
                        this.modifiersValueTree[modifier.modifierId] = {};
                        for (let childModifier of modifier.childModifiers) {
                            // Indexing
                            this.modifiers.indexById[childModifier.modifierId] = childModifier;
                            // Init default value
                            this.modifiersValueTree[modifier.modifierId][childModifier.modifierId] = childModifier.defaultAmount;
                        }
                        // Calculate total amount in group
                        this.calculateTotalAmountInGroup(modifier.modifierId);
                        break;
                    case 'single':
                        if (!this.modifiersValueTree['single']) {
                            this.modifiersValueTree['single'] = {};
                        }
                        // Indexing
                        this.modifiers.indexById[modifier.modifierId] = modifier;
                        // Init default value
                        this.modifiersValueTree['single'][modifier.modifierId] = modifier.defaultAmount;
                }
                // Find images and set flags (imagesIsset, childImagesIsset)
                this.checkImagesInModifier(modifier.modifierId);
            }
            this.calculateTotalPrice();
        }
        console.log(`this.modifiers.indexById`, this.modifiers.indexById);
    }
    calculateTotalAmountInGroup(groupId) {
        if (groupId == 'single')
            return;
        this.modifiers.indexById[groupId].totalAmount = Object
            .values(this.modifiersValueTree[groupId])
            .reduce((a, b) => a + b);
        return this.modifiers.indexById[groupId].totalAmount;
    }
    checkImagesInModifier(modifierId) {
        const m = this.modifiers.indexById[modifierId];
        this.modifiers.indexById[modifierId].imagesIsset = m.dish && m.dish.images && m.dish.images.length ? true : false;
        this.modifiers.indexById[modifierId].childImagesIsset = !!this.modifiers.indexById[modifierId]
            .childModifiers
            .find((m) => m && m.dish && m.dish.images && m.dish.images.length ? true : false);
    }
    calculateTotalPrice() {
        let totalPrice = this.dish.price || 0;
        for (let groupId in this.modifiersValueTree) {
            for (let modifierId in this.modifiersValueTree[groupId]) {
                const amount = this.modifiersValueTree[groupId][modifierId];
                if (amount) {
                    const modifier = this.modifiers.indexById[modifierId];
                    if (modifier && modifier.dish && modifier.dish.price) {
                        totalPrice += modifier.dish.price * amount;
                    }
                }
            }
        }
        this.totalPrice = totalPrice;
        this.setModifiers();
    }
    getModifiersIds(modifier) {
        return {
            groupId: (modifier.dish && modifier.dish.groupId) ? modifier.dish.groupId : undefined,
            modifierId: modifier.modifierId
        };
    }
    selectTwoPartsAssembledModifier(modifier) {
        const { groupId = 'single', modifierId } = this.getModifiersIds(modifier);
        const { minAmount, maxAmount } = modifier;
        const { minAmount: groupMinAmount = 0, maxAmount: groupMaxAmount = 0 } = this.modifiers.indexById[groupId] || {};
        const previousAmount = this.modifiersValueTree[groupId][modifierId];
        const amount = previousAmount ? 0 : 1;
        // Init tmp value storage if not exists
        if (!this.twoPartsAssembledModifiersIdsByGroupId[groupId]) {
            this.twoPartsAssembledModifiersIdsByGroupId[groupId] = [];
        }
        // Total amount in group
        const groupAmount = this.modifiers.indexById[groupId].totalAmount - previousAmount + amount;
        if (groupAmount > groupMaxAmount) {
            if (this.twoPartsAssembledModifiersIdsByGroupId[groupId].length) {
                for (let mId in this.modifiersValueTree[groupId]) {
                    this.modifiersValueTree[groupId][mId] = 0;
                }
                this.twoPartsAssembledModifiersIdsByGroupId[groupId] = this.twoPartsAssembledModifiersIdsByGroupId[groupId].slice(1, 2);
                this.modifiersValueTree[groupId][this.twoPartsAssembledModifiersIdsByGroupId[groupId][0]] = 1;
            }
            else {
                console.warn(`Limit: max ${groupMaxAmount}. Current ${groupAmount}`);
                this.eventer.emitMessageEvent(new EventMessage('warning', 'Ограничение', `Максимальное количество опций для группы
            модификаторов "${this.modifiers.indexById[groupId].group.name}" - не более ${groupMaxAmount}`));
                return;
            }
        }
        else if (groupAmount === 0) {
            this.twoPartsAssembledModifiersIdsByGroupId[groupId] = [];
        }
        if (amount && !this.twoPartsAssembledModifiersIdsByGroupId[groupId].find(v => v == modifierId)) {
            this.twoPartsAssembledModifiersIdsByGroupId[groupId].push(modifierId);
        }
        this.modifiersValueTree[groupId][modifierId] = amount;
        this.calculateTotalAmountInGroup(groupId);
        this.calculateTotalPrice();
    }
    changeModifierAmount(modifier, amount, operation) {
        if (amount < 0)
            return;
        const { groupId = 'single', modifierId } = this.getModifiersIds(modifier);
        const { minAmount, maxAmount } = modifier;
        const { minAmount: groupMinAmount = 0, maxAmount: groupMaxAmount = 0 } = this.modifiers.indexById[groupId] || {};
        const previousAmount = this.modifiersValueTree[groupId][modifierId];
        // For checkbox
        if (operation == 'checkbox' && groupId !== 'single') {
            // If it work like radio button
            if (groupMinAmount <= 1 && groupMaxAmount == 1) {
                if (amount < groupMinAmount) {
                    return;
                }
                // Set zero amount for all options
                for (let itemModifierId in this.modifiersValueTree[groupId]) {
                    this.modifiersValueTree[groupId][itemModifierId] = 0;
                }
                this.calculateTotalAmountInGroup(groupId);
            }
            // Not action needed after
            if (amount == 0) {
                this.calculateTotalPrice();
                return;
            }
        }
        // Check Group amount limits
        if (groupMinAmount || groupMaxAmount) {
            // Total amount in group
            const groupAmount = this.modifiers.indexById[groupId].totalAmount - previousAmount + amount;
            if (groupAmount < groupMinAmount) {
                console.warn(`Limit: min ${groupMinAmount}. Current ${groupAmount}`);
                this.eventer.emitMessageEvent(new EventMessage('warning', 'Ограничение', `Максимальное количество опций для группы
            модификаторов "${this.modifiers.indexById[groupId].group.name}" - не менее ${groupMinAmount}`));
                return;
            }
            if (groupAmount > groupMaxAmount) {
                console.warn(`Limit: max ${groupMaxAmount}. Current ${groupAmount}`);
                this.eventer.emitMessageEvent(new EventMessage('warning', 'Ограничение', `Максимальное количество опций для группы
            модификаторов "${this.modifiers.indexById[groupId].group.name}" - не более ${groupMaxAmount}`));
                return;
            }
        }
        // CHeck Modifier amount limits
        if (minAmount || maxAmount) {
            if (amount < minAmount) {
                switch (operation) {
                    case 'plus':
                        amount = minAmount;
                        break;
                    case 'minus':
                        amount = 0;
                        break;
                }
            }
            if (amount > maxAmount) {
                amount = maxAmount;
            }
        }
        this.modifiersValueTree[groupId][modifierId] = amount;
        this.calculateTotalAmountInGroup(groupId);
        this.calculateTotalPrice();
    }
    setModifiers() {
        const modifiersToSet = [];
        for (let groupId in this.modifiersValueTree) {
            for (let modifierId in this.modifiersValueTree[groupId]) {
                const amount = this.modifiersValueTree[groupId][modifierId];
                if (amount) {
                    modifiersToSet.push({
                        id: modifierId,
                        amount: amount,
                        groupId: groupId !== 'single' ? groupId : undefined
                    });
                }
            }
        }
        if (modifiersToSet.length) {
            this.checkValid();
            this.cartService.setModifires(modifiersToSet, []);
        }
    }
    checkValid() {
        let isValid = true;
        for (let groupId in this.modifiersValueTree) {
            const groupModifier = this.modifiers.indexById[groupId];
            if (groupModifier.required) {
                const totalAmountInGroup = this.calculateTotalAmountInGroup(groupId);
                if (totalAmountInGroup < groupModifier.minAmount) {
                    isValid = false;
                    console.warn(`Modifier ${groupId} min amount: ${groupModifier.minAmount}`);
                }
                if (totalAmountInGroup > groupModifier.maxAmount) {
                    isValid = false;
                    console.warn(`Modifier ${groupId} max amount: ${groupModifier.maxAmount}`);
                }
            }
            //for(let modifierId in this.modifiersValueTree[groupId]) {
            //
            //}
        }
        this.validate.emit(isValid);
    }
}
DishCalcComponent.decorators = [
    { type: Component, args: [{
                selector: 'rst-dish-calc',
                template: "<div *ngIf=\"dish\" class=\"ng-cart-dish-calc\" [ngClass]=\"{'ng-cart-dish-calc-two-parts-assembled': isTwoPartsAssembledTemplate}\">\r\n    <div class=\"dish\">\r\n        <div class=\"dish-image-box\">\r\n            <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\r\n        </div>\r\n        <div class=\"dish-description-box\">\r\n            <div class=\"dish-name\">{{ dish.name }}</div>\r\n            <div class=\"dish-ingredients\">{{ dish.description }}</div>\r\n            <div class=\"dish-price-box\">\r\n                <ng-container *ngIf=\"!modifiers.custom.fixed; else modifierFixedTemplate\">\r\n                    <div class=\"price\" [ngClass]=\"{'zero-price': !dish.price}\">\r\n                        <span>{{ dish.price }}</span> \u20BD\r\n                    </div>\r\n                </ng-container>\r\n                <ng-template #modifierFixedTemplate>\r\n                    <ng-container *ngIf=\"modifiers.custom.fixed as modifier\">\r\n                        <div class=\"modifier-fixed\">\r\n                            <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\r\n                                <div class=\"item\"\r\n                                     [ngClass]=\"{selected: !!modifiersValueTree[modifier.modifierId][childModifier.modifierId]}\"\r\n                                     (click)=\"changeModifierAmount(childModifier, 1, 'checkbox')\">\r\n                                    {{ childModifier.dish?.name }}\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                        <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\r\n                            <ng-container *ngIf=\"!!modifiersValueTree[modifier.modifierId][childModifier.modifierId]\">\r\n                                <div class=\"price\" [ngClass]=\"{'zero-price': !childModifier.dish?.price}\">\r\n                                    <span>{{ childModifier.dish?.price }}</span> \u20BD\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-template>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modifiers\" *ngIf=\"modifiers.baseList?.length\">\r\n        <ng-container *ngFor=\"let modifier of modifiers.baseList\">\r\n            <div class=\"modifier-group\">\r\n                <ng-container *ngIf=\"modifier.dish\">\r\n                    <div class=\"modifier-header\" *ngIf=\"modifier.group as group\">\r\n                        <div class=\"modifier-name\" *ngIf=\"group.name\">{{ group.name }}</div>\r\n                        <div class=\"modifier-description\" *ngIf=\"group.description\">{{ group.description }}</div>\r\n                    </div>\r\n\r\n                    <div class=\"modifier-box\" [ngClass]=\"{'without-images': !modifier.childImagesIsset}\">\r\n                        <!-- Single modifier -->\r\n                        <ng-container *ngTemplateOutlet=\"modifierTemplate; context: {\r\n                            modifier: modifier,\r\n                            groupId: 'single',\r\n                            amount: modifiersValueTree['single'][modifier.modifierId],\r\n                            groupAmount: modifiersValueTree['single'][modifier.modifierId],\r\n                            groupMinAmount: modifier.minAmount || 0,\r\n                            groupMaxAmount: modifier.maxAmount || 100\r\n                        }\"></ng-container>\r\n                    </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"modifier.childModifiers?.length\">\r\n                    <ng-container *ngIf=\"modifier.minAmount == 2 && modifier.maxAmount == 2; then twoPartsAssembledTemplate else groupTemplate\">\r\n                    </ng-container>\r\n\r\n                    <!-- Base group modifier view -->\r\n                    <ng-template #groupTemplate>\r\n                        <div class=\"modifier-header\" *ngIf=\"modifier.group as group\">\r\n                            <div class=\"modifier-name\" *ngIf=\"group.name\">{{ group.name }}</div>\r\n                            <div class=\"modifier-description\" *ngIf=\"group.description\">{{ group.description }}</div>\r\n                        </div>\r\n                        <div class=\"modifier-children\" [ngClass]=\"{'without-images': !modifier.imagesIsset}\">\r\n                            <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\r\n                                <!-- Group modifier -->\r\n                                <ng-container *ngTemplateOutlet=\"modifierTemplate; context: {\r\n                            modifier: childModifier,\r\n                            groupId: modifier.modifierId,\r\n                            amount: modifiersValueTree[modifier.modifierId][childModifier.modifierId],\r\n                            groupAmount: modifiers.indexById[modifier.modifierId].totalAmount,\r\n                            groupMinAmount: modifier.minAmount || 0,\r\n                            groupMaxAmount: modifier.maxAmount || 100\r\n                        }\"></ng-container>\r\n\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-template>\r\n\r\n                    <!-- Two parts assembled group modifier view (like pizza from two halves) -->\r\n                    <ng-template #twoPartsAssembledTemplate>\r\n                        <div class=\"two-parts-assembled\">\r\n                            <div class=\"two-parts-assembled-header\" [ngClass]=\"{empty: !twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId]?.length}\">\r\n                                <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\r\n                                    <ng-container *ngIf=\"modifiersValueTree[modifier.modifierId][childModifier.modifierId]\">\r\n                                        <ng-container *ngIf=\"childModifier.dish as dish\">\r\n                                            <div class=\"selected-dish\">\r\n                                                <div class=\"title\">{{ dish.name }}</div>\r\n                                                <div class=\"image-box\">\r\n                                                    <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf=\"modifiers.indexById[modifier.modifierId].totalAmount == 1\">\r\n                                            <div class=\"selected-dish\">\r\n                                                <div class=\"title\">\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043F\u043E\u043B\u043E\u0432\u0438\u043D\u0443</div>\r\n                                                <div class=\"image-box\">\r\n                                                    <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: {} }\"></ng-container>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n\r\n                            <div class=\"two-parts-assembled-body\">\r\n                                <div class=\"two-parts-assembled-body-name\">\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043B\u044E\u0431\u044B\u0435 \u0434\u0432\u0435 \u043F\u043E\u043B\u043E\u0432\u0438\u043D\u043A\u0438</div>\r\n                                <div class=\"two-parts-assembled-body-list\">\r\n                                    <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\r\n                                        <div class=\"two-parts-assembled-body-list-dish\"\r\n                                             (click)=\"selectTwoPartsAssembledModifier(childModifier)\"\r\n                                             [ngClass]=\"{selected: modifiersValueTree[modifier.modifierId][childModifier.modifierId]}\"\r\n                                             *ngIf=\"childModifier.dish as dish\">\r\n                                            <div class=\"image-box\">\r\n                                                <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\r\n                                            </div>\r\n                                            <div class=\"dish-name\">\r\n                                                {{ dish.name }}\r\n                                            </div>\r\n                                            <div class=\"dish-price\">\r\n                                                <div [ngClass]=\"{'zero-price': !dish.price}\">\r\n                                                    <span>{{ dish.price }}</span> \u20BD\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n\r\n\r\n                </ng-container>\r\n\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"result\">\r\n        <span class=\"text\">\u0418\u0422\u041E\u0413\u041E:</span>\r\n        <span class=\"price\">\r\n            <span>{{ totalPrice}}</span> \u20BD\r\n        </span>\r\n    </div>\r\n    <div class=\"comment\" *ngIf=\"isTwoPartsAssembledTemplate\">\r\n        <div class=\"title\">\u041A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0439</div>\r\n        <div class=\"input-box\">\r\n            <input #commentInput type=\"text\" placeholder=\"\" (keyup)=\"comment.emit(commentInput.value)\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Template block #dishImageTemplate -->\r\n\r\n<ng-template #dishImageTemplate let-dish=\"dish\">\r\n    <ng-container *ngIf=\"dish?.images && dish.images[0]?.images?.small; else imgPlaceholder\">\r\n        <div class=\"dish-image\" [style.backgroundImage]=\"'url(' + imageUrl + dish.images[0].images.small + ')'\"></div>\r\n    </ng-container>\r\n    <ng-template #imgPlaceholder>\r\n        <div class=\"dish-image-placeholder\"></div>\r\n    </ng-template>\r\n</ng-template>\r\n\r\n<!-- Template block #modifierTemplate -->\r\n\r\n<ng-template #modifierTemplate\r\n             let-modifier=\"modifier\"\r\n             let-groupId=\"groupId\"\r\n             let-amount=\"amount\"\r\n             let-groupAmount=\"groupAmount\"\r\n             let-groupMinAmount=\"groupMinAmount\"\r\n             let-groupMaxAmount=\"groupMaxAmount\">\r\n    <ng-container *ngIf=\"modifier.dish as dish\">\r\n        <div class=\"modifier-dish\">\r\n            <div class=\"modifier-dish-image-box\">\r\n                <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\r\n            </div>\r\n            <div class=\"modifier-dish-description-box\">\r\n                <div class=\"modifier-dish-name\">{{ dish.name }}</div>\r\n                <div class=\"modifier-dish-weight\" *ngIf=\"dish.weight\">{{ dish.weight * 1000 }} \u0433\u0440</div>\r\n            </div>\r\n            <div class=\"modifier-dish-price-box\">\r\n                <div [ngClass]=\"{'zero-price': !dish.price}\">\r\n                    <span>{{ dish.price }}</span> \u20BD\r\n                </div>\r\n            </div>\r\n            <div class=\"modifier-dish-action-box\">\r\n                <ng-container *ngIf=\"groupMinAmount <= 1 && groupMaxAmount == 1; else counterTemplate\">\r\n                    <ng-container *ngTemplateOutlet=\"modifierCheckboxTemplate; context: {\r\n                        modifier: modifier,\r\n                        groupId: groupId,\r\n                        amount: amount\r\n                    }\"></ng-container>\r\n                </ng-container>\r\n\r\n                <ng-template #counterTemplate>\r\n                    <ng-container *ngTemplateOutlet=\"modifierCounterTemplate; context: {\r\n                        modifier: modifier,\r\n                        groupId: groupId,\r\n                        amount: amount,\r\n                        groupAmount: groupAmount,\r\n                        groupMinAmount: groupMinAmount,\r\n                        groupMaxAmount: groupMaxAmount\r\n                    }\"></ng-container>\r\n                </ng-template>\r\n\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<!-- Template block #modifierCounterTemplate -->\r\n\r\n<ng-template #modifierCounterTemplate\r\n             let-modifier=\"modifier\"\r\n             let-groupId=\"groupId\"\r\n             let-amount=\"amount\"\r\n             let-groupAmount=\"groupAmount\"\r\n             let-groupMinAmount=\"groupMinAmount\"\r\n             let-groupMaxAmount=\"groupMaxAmount\">\r\n    <ng-container>\r\n        <div class=\"modifier-counter\" [ngClass]=\"{disabled: !amount && groupAmount >= groupMaxAmount}\">\r\n            <div\r\n                    class=\"minus\"\r\n                    [ngClass]=\"{disabled: !amount || groupAmount <= groupMinAmount}\"\r\n                    (click)=\"changeModifierAmount(modifier, amount - 1, 'minus')\"\r\n                    onselectstart=\"return false;\">-</div>\r\n            <input [value]=\"amount\" readonly #input>\r\n            <div\r\n                    class=\"plus\"\r\n                    [ngClass]=\"{disabled: groupAmount >= groupMaxAmount}\"\r\n                    (click)=\"changeModifierAmount(modifier, amount + 1, 'plus')\"\r\n                    onselectstart=\"return false;\">+</div>\r\n        </div>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<!-- Template block #modifierCheckboxTemplate -->\r\n\r\n<ng-template #modifierCheckboxTemplate\r\n             let-modifier=\"modifier\"\r\n             let-groupId=\"groupId\"\r\n             let-amount=\"amount\">\r\n    <ng-container>\r\n        <div\r\n                class=\"modifier-checkbox\"\r\n                [ngClass]=\"{selected: amount}\"\r\n                (click)=\"changeModifierAmount(modifier, amount ? 0 : 1, 'checkbox')\"></div>\r\n    </ng-container>\r\n</ng-template>\r\n",
                styles: [".dish{align-items:flex-start;border-bottom:2px solid #969696;display:flex;padding-bottom:34px}.dish .dish-image-box{background-color:#eee;background-size:50%;box-sizing:border-box;height:170px;position:relative;text-align:center;width:250px}.dish .dish-description-box{align-items:stretch;box-sizing:border-box;display:flex;flex-direction:column;height:170px;margin-left:34px;padding:5px 0 0}.dish .dish-description-box .dish-name{color:#0a0909;font-size:28px;font-weight:700;letter-spacing:2.4px;line-height:32px}.dish .dish-description-box .dish-ingredients{color:#000;flex-grow:1;font-size:15px;line-height:17px;margin-top:15px;overflow:hidden}.dish .dish-description-box .dish-price-box{align-items:center;display:flex;font-size:20px;font-weight:700;height:45px;justify-content:space-between;line-height:23px;margin-right:49px}.ng-cart-dish-calc-two-parts-assembled .dish{border:none;margin-left:0;padding-bottom:0}.ng-cart-dish-calc-two-parts-assembled .dish .dish-image-box{display:none}.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box{height:auto;width:100%}.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box .dish-name{color:#0a0909;font-size:28px;font-weight:700;letter-spacing:2.4px;line-height:32px;text-align:center;text-transform:uppercase}.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box .dish-ingredients,.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box .dish-price-box{display:none}.dish-image{background-position:top;background-repeat:no-repeat;background-size:cover;border-radius:0;height:100%;width:250px}.result{color:#0a0909;font-size:24px;font-weight:700;line-height:28px;margin-top:49px;text-align:right}.result .price{margin-left:76px}.comment{padding-bottom:15px}.comment .title{color:#0a0909;font-size:20px;font-weight:500;line-height:23px;margin:30px 0 20px}.comment .input-box{margin-top:10px}.comment .input-box input{border:2px solid #969696;border-radius:15px;box-sizing:border-box;color:#969696;font-size:20px;font-style:italic;font-weight:400;height:45px;line-height:45px;padding:0 20px}.modifiers .modifier-group{border-bottom:2px solid #969696;margin-top:25px;padding-bottom:25px}.modifiers .modifier-header{margin-bottom:25px}.modifiers .modifier-header .modifier-name{color:#0a0909;font-size:20px;font-weight:500;line-height:23px}.modifiers .modifier-header .modifier-description{color:#0a0909;font-size:15px;line-height:17px}.modifiers .modifier-dish{align-items:center;box-sizing:border-box;display:flex;height:100px;justify-content:center;margin-bottom:2px}.modifiers .modifier-dish .modifier-dish-image-box{background-color:#fff;background-size:50%;box-sizing:border-box;height:100px;margin-right:28px;position:relative;text-align:center;width:100px}.modifiers .modifier-dish .modifier-dish-image-box .dish-image{background-position:50%;background-size:contain;height:100%;width:100%}.modifiers .modifier-dish .modifier-dish-description-box{display:flex;flex-direction:column;flex-grow:1;justify-content:center}.modifiers .modifier-dish .modifier-dish-description-box .modifier-dish-name{color:#0a0909;font-size:20px;font-weight:500;line-height:23px}.modifiers .modifier-dish .modifier-dish-description-box .modifier-dish-weight{color:#0a0909;font-size:20px;line-height:23px;margin-top:10px}.modifiers .modifier-dish .modifier-dish-price-box{color:#0a0909;font-size:20px;font-weight:700;line-height:23px;margin-right:105px}.modifiers .modifier-dish .modifier-dish-price-box .zero-price{display:none}.modifiers .modifier-dish .modifier-dish-action-box{display:flex;justify-content:center;width:151px}.two-parts-assembled .two-parts-assembled-header{align-items:center;border-bottom:2px solid #969696;display:flex;height:230px;justify-content:center;opacity:1;overflow:hidden;padding-bottom:28px;transition:all .5s ease 0s}.two-parts-assembled .two-parts-assembled-header.empty{border-bottom:none;height:0;opacity:0}.two-parts-assembled .two-parts-assembled-header .selected-dish{align-items:center;display:flex;justify-content:flex-end;width:50%}.two-parts-assembled .two-parts-assembled-header .selected-dish .title{color:#0a0909;font-size:21px;line-height:25px;margin-right:24px}.two-parts-assembled .two-parts-assembled-header .selected-dish .image-box{height:200px;overflow:hidden;width:100px}.two-parts-assembled .two-parts-assembled-header .selected-dish .image-box .dish-image{height:100%;width:200%}.two-parts-assembled .two-parts-assembled-header .selected-dish:nth-child(2){flex-direction:row-reverse}.two-parts-assembled .two-parts-assembled-header .selected-dish:nth-child(2) .title{margin-left:24px}.two-parts-assembled .two-parts-assembled-header .selected-dish:nth-child(2) .image-box{direction:rtl}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-name{color:#0a0909;font-size:20px;font-weight:500;line-height:23px;padding:20px 0}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list{display:grid;grid-column-gap:30px;grid-row-gap:24px;grid-template-columns:1fr 1fr 1fr;margin-top:30px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish{align-items:center;border:1.5px solid hsla(0,0%,100%,0);box-sizing:border-box;color:#0a0909;cursor:pointer;display:flex;flex-direction:column}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish.selected{border:1.5px solid #0a0909;border-radius:15px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .dish-name{font-size:17px;font-weight:500;letter-spacing:2.4px;line-height:20px;padding:0 5px;text-align:center;text-transform:uppercase}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .dish-price{font-size:20px;font-weight:700;line-height:23px;padding:5px 0 10px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .image-box{border-radius:15px 15px 0 0;height:228px;width:228px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .image-box .dish-image{border-radius:15px 15px 0 0;height:100%;width:100%}.modifier-fixed{align-items:stretch;border:2px solid #767676;border-radius:15px;box-sizing:border-box;display:flex;height:45px}.modifier-fixed .item{align-items:center;color:#767676;display:flex;font-size:20px;font-weight:500;height:45px;justify-content:center;line-height:23px;margin-top:-2px;width:142px}.modifier-fixed .item:first-child{margin-left:-2px}.modifier-fixed .item:last-child{margin-right:-2px}.modifier-fixed .item.selected{background:#0a0909;border-radius:15px;color:#fff}.modifier-fixed .item:not(.selected){cursor:pointer}.modifier-checkbox{align-items:center;background:#e0e0e0;border-radius:15px;cursor:pointer;display:flex;height:50px;justify-content:center;width:50px}.modifier-checkbox.selected:after{content:url(\"data:image/svg+xml; base64, PHN2ZyB3aWR0aD0iMjgiIGhlaWdodD0iMjgiIHZpZXdCb3g9IjAgMCAyOCAyOCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTIgMTMuNUwxMS4zMjMxIDI2TDI2IDIiIHN0cm9rZT0iYmxhY2siIHN0cm9rZS13aWR0aD0iMy41IiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiLz4KPC9zdmc+Cg==\")}.modifier-counter{align-items:center;background:#e0e0e0;border:none;border-radius:15px;display:flex;height:50px;position:relative;width:151px}.modifier-counter.disabled{opacity:.3}.modifier-counter:not(.disabled) .minus.disabled,.modifier-counter:not(.disabled) .plus.disabled{cursor:default;opacity:.15}.modifier-counter input{background:transparent;border:none;font-weight:500;padding:0;width:100%}.modifier-counter .minus,.modifier-counter .plus,.modifier-counter input{color:#0a0909;font-size:18px;height:50px;line-height:50px;text-align:center}.modifier-counter .minus,.modifier-counter .plus{cursor:pointer;display:block;font-style:normal;font-weight:700;padding:0 30px;position:absolute;top:0}.modifier-counter .minus:hover,.modifier-counter .plus:hover{color:#000}.modifier-counter .minus:active,.modifier-counter .plus:active{color:#cc0009}.modifier-counter .minus.loading,.modifier-counter .plus.loading{opacity:.2}.modifier-counter .minus{left:0}.modifier-counter .plus{right:0}.without-images .modifier-dish-image-box{height:70px!important}.without-images .modifier-dish{height:70px}"]
            },] }
];
DishCalcComponent.ctorParameters = () => [
    { type: NgRestoCartService },
    { type: EventerService },
    { type: String, decorators: [{ type: Inject, args: ['ImageUrl',] }] }
];
DishCalcComponent.propDecorators = {
    dish: [{ type: Input }],
    amount: [{ type: Input }],
    selectedModifiers: [{ type: Input }],
    validate: [{ type: Output }],
    amountDishToAdd: [{ type: Output }],
    comment: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,