"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var ng_restocart_service_1 = require("../../services/ng-restocart.service");
var ng_core_1 = require("@webresto/ng-core");
var DishCalcLnComponent = /** @class */ (function () {
    function DishCalcLnComponent(cartService, eventer, imageUrl) {
        this.cartService = cartService;
        this.eventer = eventer;
        this.validate = new core_1.EventEmitter();
        this.amountDishToAdd = new core_1.EventEmitter();
        this.comment = new core_1.EventEmitter();
        this.totalPriceChange = new core_1.EventEmitter();
        this.worningMessageChange = new core_1.EventEmitter();
        this.modifiers = {
            indexById: {},
            custom: {
                fixed: null
            },
            baseList: [],
        };
        this.modifiersValueTree = {};
        this.twoPartsAssembledModifiersIdsByGroupId = {};
        this.imageUrl = imageUrl;
    }
    DishCalcLnComponent.prototype.ngOnInit = function () {
        this.checkValid();
    };
    DishCalcLnComponent.prototype.ngOnDestroy = function () {
        this.validate.emit(true);
        this.cartService.setModifires([], []);
    };
    DishCalcLnComponent.prototype.ngOnChanges = function () {
        var e_1, _a, e_2, _b, e_3, _c;
        this.modifiers = {
            indexById: {},
            custom: {
                fixed: null
            },
            baseList: [],
        };
        this.modifiersValueTree = {};
        if (this.dish && this.dish.modifiers) {
            try {
                for (var _d = tslib_1.__values(this.dish.modifiers), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var modifier = _e.value;
                    var modifierType = null;
                    // Indexing
                    this.modifiers.indexById[modifier.modifierId] = modifier;
                    // Check Custom modifiers (like Pizza Size)
                    if (!this.modifiers.custom.fixed
                        && !this.modifiers.baseList.length
                        && modifier.childModifiers
                        && modifier.childModifiers.length == 2
                        && modifier.maxAmount == modifier.maxAmount
                        && modifier.maxAmount == 1) {
                        // This is Pizza Size modifier
                        modifierType = 'custom';
                        this.modifiers.custom.fixed = modifier;
                        console.info('Custom Fixed modifier:', modifier);
                    }
                    else if (modifier.group
                        && modifier.childModifiers
                        && modifier.childModifiers.length
                        && modifier.childModifiers.find(function (m) { return m.dish; })) {
                        // This is Base modifier
                        modifierType = 'group';
                        this.modifiers.baseList.push(modifier);
                        if (modifier.minAmount == 2 && modifier.maxAmount == 2) {
                            this.isTwoPartsAssembledTemplate = true;
                        }
                        console.info('Group modifier:', modifier);
                    }
                    else if (modifier.dish) {
                        modifierType = 'single';
                        this.modifiers.baseList.push(modifier);
                        console.info('Single modifier:', modifier);
                    }
                    else {
                        // This is broken modifier
                        modifierType = 'broken';
                        console.warn('Broken modifier:', modifier);
                    }
                    // Init default values
                    switch (modifierType) {
                        case 'group':
                        case 'custom':
                            this.modifiersValueTree[modifier.modifierId] = {};
                            try {
                                for (var _f = tslib_1.__values(modifier.childModifiers), _g = _f.next(); !_g.done; _g = _f.next()) {
                                    var childModifier = _g.value;
                                    // Indexing
                                    this.modifiers.indexById[childModifier.modifierId] = childModifier;
                                    // Init default value
                                    this.modifiersValueTree[modifier.modifierId][childModifier.modifierId] = childModifier.defaultAmount;
                                }
                            }
                            catch (e_2_1) { e_2 = { error: e_2_1 }; }
                            finally {
                                try {
                                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                                }
                                finally { if (e_2) throw e_2.error; }
                            }
                            // Calculate total amount in group
                            this.calculateTotalAmountInGroup(modifier.modifierId);
                            break;
                        case 'single':
                            if (!this.modifiersValueTree['single']) {
                                this.modifiersValueTree['single'] = {};
                            }
                            // Indexing
                            this.modifiers.indexById[modifier.modifierId] = modifier;
                            // Init default value
                            this.modifiersValueTree['single'][modifier.modifierId] = modifier.defaultAmount;
                    }
                    // Find images and set flags (imagesIsset, childImagesIsset)
                    this.checkImagesInModifier(modifier.modifierId);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.calculateTotalPrice();
        }
        //console.log(`this.modifiers.indexById`, this.modifiers.indexById);
        //console.log(`selectedModifiers`, this.selectedModifiers);
        if (this.selectedModifiers && this.selectedModifiers.length) {
            try {
                for (var _h = tslib_1.__values(this.selectedModifiers), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var m = _j.value;
                    if (!m.amount)
                        continue;
                    try {
                        var groupId = m.groupId || 'single';
                        var groupModifier = this.modifiers.indexById[groupId];
                        var modifier = this.modifiers.indexById[m.id];
                        if (groupModifier && groupModifier.minAmount == 2 && groupModifier.maxAmount == 2) {
                            this.selectTwoPartsAssembledModifier(modifier);
                        }
                        else {
                            this.modifiersValueTree[groupId][m.id] = m.amount;
                            this.calculateTotalAmountInGroup(groupId);
                        }
                    }
                    catch (e) {
                        console.error("Invalid modifiers amounts", e);
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        this.calculateTotalPrice();
        this.checkValid();
    };
    DishCalcLnComponent.prototype.calculateTotalAmountInGroup = function (groupId) {
        if (groupId == 'single')
            return;
        this.modifiers.indexById[groupId].totalAmount = Object
            .values(this.modifiersValueTree[groupId])
            .reduce(function (a, b) { return a + b; });
        return this.modifiers.indexById[groupId].totalAmount;
    };
    DishCalcLnComponent.prototype.checkImagesInModifier = function (modifierId) {
        var m = this.modifiers.indexById[modifierId];
        this.modifiers.indexById[modifierId].imagesIsset = m.dish && m.dish.images && m.dish.images.length ? true : false;
        this.modifiers.indexById[modifierId].childImagesIsset = !!this.modifiers.indexById[modifierId]
            .childModifiers
            .find(function (m) { return m && m.dish && m.dish.images && m.dish.images.length ? true : false; });
    };
    DishCalcLnComponent.prototype.calculateTotalPrice = function () {
        var totalPrice = this.dish.price || 0;
        for (var groupId in this.modifiersValueTree) {
            for (var modifierId in this.modifiersValueTree[groupId]) {
                var amount = this.modifiersValueTree[groupId][modifierId];
                if (amount) {
                    var modifier = this.modifiers.indexById[modifierId];
                    if (modifier && modifier.dish && modifier.dish.price) {
                        totalPrice += modifier.dish.price * amount;
                    }
                }
            }
        }
        this.totalPrice = totalPrice;
        this.totalPriceChange.emit(totalPrice);
        this.setModifiers();
    };
    DishCalcLnComponent.prototype.getModifiersIds = function (modifier) {
        return {
            groupId: (modifier.dish && modifier.dish.groupId) ? modifier.dish.groupId : undefined,
            modifierId: modifier.modifierId
        };
    };
    DishCalcLnComponent.prototype.selectTwoPartsAssembledModifier = function (modifier) {
        var _a = this.getModifiersIds(modifier), _b = _a.groupId, groupId = _b === void 0 ? 'single' : _b, modifierId = _a.modifierId;
        var minAmount = modifier.minAmount, maxAmount = modifier.maxAmount;
        var _c = this.modifiers.indexById[groupId] || {}, _d = _c.minAmount, groupMinAmount = _d === void 0 ? 0 : _d, _e = _c.maxAmount, groupMaxAmount = _e === void 0 ? 0 : _e;
        var previousAmount = this.modifiersValueTree[groupId][modifierId];
        var amount = previousAmount ? 0 : 1;
        // Init tmp value storage if not exists
        if (!this.twoPartsAssembledModifiersIdsByGroupId[groupId]) {
            this.twoPartsAssembledModifiersIdsByGroupId[groupId] = [];
        }
        // Total amount in group
        var groupAmount = this.modifiers.indexById[groupId].totalAmount - previousAmount + amount;
        if (groupAmount > groupMaxAmount) {
            if (this.twoPartsAssembledModifiersIdsByGroupId[groupId].length) {
                for (var mId in this.modifiersValueTree[groupId]) {
                    this.modifiersValueTree[groupId][mId] = 0;
                }
                this.twoPartsAssembledModifiersIdsByGroupId[groupId] = this.twoPartsAssembledModifiersIdsByGroupId[groupId].slice(1, 2);
                this.modifiersValueTree[groupId][this.twoPartsAssembledModifiersIdsByGroupId[groupId][0]] = 1;
            }
            else {
                console.warn("Limit: max " + groupMaxAmount + ". Current " + groupAmount);
                this.eventer.emitMessageEvent(new ng_core_1.EventMessage('warning', 'Ограничение', "\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043E\u043F\u0446\u0438\u0439 \u0434\u043B\u044F \u0433\u0440\u0443\u043F\u043F\u044B\n            \u043C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u043E\u0432 \"" + this.modifiers.indexById[groupId].group.name + "\" - \u043D\u0435 \u0431\u043E\u043B\u0435\u0435 " + groupMaxAmount));
                return;
            }
        }
        else if (groupAmount === 0) {
            this.twoPartsAssembledModifiersIdsByGroupId[groupId] = [];
        }
        if (amount && !this.twoPartsAssembledModifiersIdsByGroupId[groupId].find(function (v) { return v == modifierId; })) {
            this.twoPartsAssembledModifiersIdsByGroupId[groupId].push(modifierId);
        }
        this.modifiersValueTree[groupId][modifierId] = amount;
        this.calculateTotalAmountInGroup(groupId);
        this.calculateTotalPrice();
    };
    DishCalcLnComponent.prototype.changeModifierAmount = function (modifier, amount, operation) {
        if (amount < 0)
            return;
        var _a = this.getModifiersIds(modifier), _b = _a.groupId, groupId = _b === void 0 ? 'single' : _b, modifierId = _a.modifierId;
        var minAmount = modifier.minAmount, maxAmount = modifier.maxAmount;
        var _c = this.modifiers.indexById[groupId] || {}, _d = _c.minAmount, groupMinAmount = _d === void 0 ? 0 : _d, _e = _c.maxAmount, groupMaxAmount = _e === void 0 ? 0 : _e;
        var previousAmount = this.modifiersValueTree[groupId][modifierId];
        // For checkbox
        if (operation == 'checkbox' && groupId !== 'single') {
            // If it work like radio button
            if (groupMinAmount <= 1 && groupMaxAmount == 1) {
                if (amount < groupMinAmount) {
                    return;
                }
                // Set zero amount for all options
                for (var itemModifierId in this.modifiersValueTree[groupId]) {
                    this.modifiersValueTree[groupId][itemModifierId] = 0;
                }
                this.calculateTotalAmountInGroup(groupId);
            }
            // Not action needed after
            if (amount == 0) {
                this.calculateTotalPrice();
                return;
            }
        }
        // Check Group amount limits
        if (groupMinAmount || groupMaxAmount) {
            // Total amount in group
            var groupAmount = this.modifiers.indexById[groupId].totalAmount - previousAmount + amount;
            if (groupAmount < groupMinAmount) {
                console.warn("Limit: min " + groupMinAmount + ". Current " + groupAmount);
                this.eventer.emitMessageEvent(new ng_core_1.EventMessage('warning', 'Ограничение', "\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043E\u043F\u0446\u0438\u0439 \u0434\u043B\u044F \u0433\u0440\u0443\u043F\u043F\u044B\n            \u043C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u043E\u0432 \"" + this.modifiers.indexById[groupId].group.name + "\" - \u043D\u0435 \u043C\u0435\u043D\u0435\u0435 " + groupMinAmount));
                return;
            }
            if (groupAmount > groupMaxAmount) {
                console.warn("Limit: max " + groupMaxAmount + ". Current " + groupAmount);
                this.eventer.emitMessageEvent(new ng_core_1.EventMessage('warning', 'Ограничение', "\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043E\u043F\u0446\u0438\u0439 \u0434\u043B\u044F \u0433\u0440\u0443\u043F\u043F\u044B\n            \u043C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u043E\u0432 \"" + this.modifiers.indexById[groupId].group.name + "\" - \u043D\u0435 \u0431\u043E\u043B\u0435\u0435 " + groupMaxAmount));
                return;
            }
        }
        // CHeck Modifier amount limits
        if (minAmount || maxAmount) {
            if (amount < minAmount) {
                switch (operation) {
                    case 'plus':
                        amount = minAmount;
                        break;
                    case 'minus':
                        amount = 0;
                        break;
                }
            }
            if (amount > maxAmount) {
                amount = maxAmount;
            }
        }
        this.modifiersValueTree[groupId][modifierId] = amount;
        this.calculateTotalAmountInGroup(groupId);
        this.calculateTotalPrice();
    };
    DishCalcLnComponent.prototype.setModifiers = function () {
        var modifiersToSet = [];
        for (var groupId in this.modifiersValueTree) {
            for (var modifierId in this.modifiersValueTree[groupId]) {
                var amount = this.modifiersValueTree[groupId][modifierId];
                if (amount) {
                    modifiersToSet.push({
                        id: modifierId,
                        amount: amount,
                        groupId: groupId !== 'single' ? groupId : undefined
                    });
                }
            }
        }
        if (modifiersToSet.length) {
            this.checkValid();
            this.cartService.setModifires(modifiersToSet, []);
        }
    };
    DishCalcLnComponent.prototype.checkValid = function () {
        var isValid = true;
        for (var groupId in this.modifiersValueTree) {
            var groupModifier = this.modifiers.indexById[groupId];
            if (groupModifier.required) {
                var totalAmountInGroup = this.calculateTotalAmountInGroup(groupId);
                if (totalAmountInGroup < groupModifier.minAmount) {
                    isValid = false;
                    console.warn("Modifier " + groupId + " min amount: " + groupModifier.minAmount);
                }
                if (totalAmountInGroup > groupModifier.maxAmount) {
                    isValid = false;
                    console.warn("Modifier " + groupId + " max amount: " + groupModifier.maxAmount);
                }
            }
            //for(let modifierId in this.modifiersValueTree[groupId]) {
            //
            //}
        }
        this.validate.emit(isValid);
    };
    DishCalcLnComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'dish-calc-ln',
                    template: "<div *ngIf=\"dish\" class=\"ng-cart-dish-calc\" [ngClass]=\"{'ng-cart-dish-calc-two-parts-assembled': isTwoPartsAssembledTemplate}\">\n    <div class=\"title-box\">{{ dish.name }}</div>\n    <div class=\"view-box\">\n\n        <ng-container *ngIf=\"isTwoPartsAssembledTemplate; then twoPartsAssembledHeaderTemplate else baseHeaderTemplate\"></ng-container>\n        <ng-template #baseHeaderTemplate>\n            <div class=\"dish\">\n                <div class=\"dish-image-box\">\n                    <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\n                </div>\n                <div class=\"dish-description-box\">\n                    <div class=\"dish-ingredients\">{{ dish.description }}</div>\n                    <div class=\"dish-price-box\">\n                        <ng-container *ngIf=\"modifiers.custom.fixed as modifier\">\n                            <div class=\"modifier-fixed\">\n                                <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\n                                    <div class=\"item\"\n                                         [ngClass]=\"{selected: !!modifiersValueTree[modifier.modifierId][childModifier.modifierId]}\"\n                                         (click)=\"changeModifierAmount(childModifier, 1, 'checkbox')\">\n                                        {{ childModifier.dish?.name }}\n                                    </div>\n                                </ng-container>\n                            </div>\n                            <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\n                                <ng-container *ngIf=\"!!modifiersValueTree[modifier.modifierId][childModifier.modifierId]\">\n                                    <div class=\"price\" [ngClass]=\"{'zero-price': !childModifier.dish?.price}\">\n                                        <span>{{ childModifier.dish?.price }}</span> \u20BD\n                                    </div>\n                                </ng-container>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #twoPartsAssembledHeaderTemplate>\n            <ng-container *ngFor=\"let modifier of modifiers.baseList\">\n                <ng-container *ngIf=\"modifier.childModifiers?.length && modifier.minAmount == 2 && modifier.maxAmount == 2\">\n                    <div class=\"two-parts-assembled-header\" [ngClass]=\"{empty: !twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId]?.length}\">\n                        <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\n                            <ng-container *ngIf=\"modifiersValueTree[modifier.modifierId][childModifier.modifierId]\">\n                                <ng-container *ngIf=\"childModifier.dish as dish\">\n                                    <div class=\"selected-dish\">\n                                        <!--<div class=\"title\">{{ dish.name }}</div>-->\n                                        <div class=\"image-box\">\n                                            <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf=\"modifiers.indexById[modifier.modifierId].totalAmount == 1\">\n                                    <div class=\"selected-dish\">\n                                        <!--<div class=\"title\">\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043F\u043E\u043B\u043E\u0432\u0438\u043D\u0443</div>-->\n                                        <div class=\"image-box\">\n                                            <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: {} }\"></ng-container>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n                    <div class=\"two-parts-assembled-selected-dishes-names\" >\n                        <!--twoPartsAssembledModifiersIdsByGroupId: {{ twoPartsAssembledModifiersIdsByGroupId | json }}<br>\n                        modifier.modifierId: {{ modifier.modifierId }}<br>-->\n\n                        <div class=\"selected-dish-item\">\n                            <div class=\"type-name\">\u041B\u0435\u0432\u0430\u044F:</div>\n                            <div class=\"dish-name\" *ngIf=\"twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId] && twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId][0]; else noDishTemplate\">\n                                {{ modifiers.indexById[twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId][0]].dish?.name }}\n                            </div>\n                        </div>\n                        <div class=\"selected-dish-item\">\n                            <div class=\"type-name\">\u041F\u0440\u0430\u0432\u0430\u044F:</div>\n                            <div class=\"dish-name\" *ngIf=\"twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId] && twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId][1]; else noDishTemplate\">\n                                {{ modifiers.indexById[twoPartsAssembledModifiersIdsByGroupId[modifier.modifierId][1]].dish?.name }}\n                            </div>\n                        </div>\n                        <ng-template #noDishTemplate>\n                            <div class=\"dish-name empty\">\u041D\u0435 \u0432\u044B\u0431\u0440\u0430\u043D\u0430</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </ng-template>\n\n        <div class=\"comment\" *ngIf=\"isTwoPartsAssembledTemplate\">\n            <div class=\"divider\"></div>\n            <div class=\"title\">\u041A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0439</div>\n            <div class=\"input-box\">\n                <input #commentInput type=\"text\" placeholder=\"\" (keyup)=\"comment.emit(commentInput.value)\">\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"settings-box\">\n        <div class=\"modifiers\" *ngIf=\"modifiers.baseList?.length\">\n            <ng-container *ngFor=\"let modifier of modifiers.baseList\">\n                <div class=\"modifier-group\">\n                    <ng-container *ngIf=\"modifier.dish\">\n                        <div class=\"modifier-header\" *ngIf=\"modifier.group as group\">\n                            <div class=\"modifier-name\" *ngIf=\"group.name\">{{ group.name }}</div>\n                            <div class=\"modifier-description\" *ngIf=\"group.description\">{{ group.description }}</div>\n                        </div>\n\n                        <div class=\"modifier-box\" [ngClass]=\"{'without-images': !modifier.childImagesIsset}\">\n                            <!-- Single modifier -->\n                            <ng-container *ngTemplateOutlet=\"modifierTemplate; context: {\n                            modifier: modifier,\n                            groupId: 'single',\n                            amount: modifiersValueTree['single'][modifier.modifierId],\n                            groupAmount: modifiersValueTree['single'][modifier.modifierId],\n                            groupMinAmount: modifier.minAmount || 0,\n                            groupMaxAmount: modifier.maxAmount || 100\n                        }\"></ng-container>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"modifier.childModifiers?.length\">\n                        <ng-container *ngIf=\"modifier.minAmount == 2 && modifier.maxAmount == 2; then twoPartsAssembledTemplate else groupTemplate\">\n                        </ng-container>\n\n                        <!-- Base group modifier view -->\n                        <ng-template #groupTemplate>\n                            <div class=\"modifier-header\" *ngIf=\"modifier.group as group\">\n                                <div class=\"modifier-name\" *ngIf=\"group.name\">{{ group.name }}</div>\n                                <div class=\"modifier-description\" *ngIf=\"group.description\">{{ group.description }}</div>\n                            </div>\n                            <div class=\"modifier-children\" [ngClass]=\"{'without-images': !modifier.imagesIsset}\">\n                                <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\n                                    <!-- Group modifier -->\n                                    <ng-container *ngTemplateOutlet=\"modifierTemplate; context: {\n                            modifier: childModifier,\n                            groupId: modifier.modifierId,\n                            amount: modifiersValueTree[modifier.modifierId][childModifier.modifierId],\n                            groupAmount: modifiers.indexById[modifier.modifierId].totalAmount,\n                            groupMinAmount: modifier.minAmount || 0,\n                            groupMaxAmount: modifier.maxAmount || 100\n                        }\"></ng-container>\n\n                                </ng-container>\n                            </div>\n                        </ng-template>\n\n                        <!-- Two parts assembled group modifier view (like pizza from two halves) -->\n                        <ng-template #twoPartsAssembledTemplate>\n                            <div class=\"two-parts-assembled\">\n                                <div class=\"two-parts-assembled-body\">\n                                    <div class=\"two-parts-assembled-body-name\">\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043B\u044E\u0431\u044B\u0435 \u0434\u0432\u0435 \u043F\u043E\u043B\u043E\u0432\u0438\u043D\u043A\u0438</div>\n                                    <div class=\"two-parts-assembled-body-list\">\n                                        <ng-container *ngFor=\"let childModifier of modifier.childModifiers\">\n                                            <div class=\"two-parts-assembled-body-list-dish\"\n                                                 (click)=\"selectTwoPartsAssembledModifier(childModifier)\"\n                                                 [ngClass]=\"{selected: modifiersValueTree[modifier.modifierId][childModifier.modifierId]}\"\n                                                 *ngIf=\"childModifier.dish as dish\">\n                                                <div class=\"image-box\">\n                                                    <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\n                                                </div>\n                                                <div class=\"dish-name\">\n                                                    {{ dish.name }}\n                                                </div>\n                                                <div class=\"dish-price\">\n                                                    <div [ngClass]=\"{'zero-price': !dish.price}\">\n                                                        <span>{{ dish.price }}</span> \u20BD\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n\n\n                    </ng-container>\n\n                </div>\n            </ng-container>\n        </div>\n    </div>\n\n\n    <!--<div class=\"result-box result\">\n        <span class=\"text\">\u0418\u0422\u041E\u0413\u041E:</span>\n        <span class=\"price\">\n            <span>{{ totalPrice}}</span> \u20BD\n        </span>\n    </div>-->\n\n\n</div>\n\n\n\n<!-- Template block #dishImageTemplate -->\n\n<ng-template #dishImageTemplate let-dish=\"dish\">\n    <ng-container *ngIf=\"dish?.images && dish.images[0]?.images?.small; else imgPlaceholder\">\n        <div class=\"dish-image\" [style.backgroundImage]=\"'url(' + imageUrl + dish.images[0].images.small + ')'\"></div>\n    </ng-container>\n    <ng-template #imgPlaceholder>\n        <div class=\"dish-image-placeholder\"></div>\n    </ng-template>\n</ng-template>\n\n<!-- Template block #modifierTemplate -->\n\n<ng-template #modifierTemplate\n             let-modifier=\"modifier\"\n             let-groupId=\"groupId\"\n             let-amount=\"amount\"\n             let-groupAmount=\"groupAmount\"\n             let-groupMinAmount=\"groupMinAmount\"\n             let-groupMaxAmount=\"groupMaxAmount\">\n    <ng-container *ngIf=\"modifier.dish as dish\">\n        <div class=\"modifier-dish\">\n            <div class=\"modifier-dish-image-box\">\n                <ng-container *ngTemplateOutlet=\"dishImageTemplate; context: { dish: dish }\"></ng-container>\n            </div>\n            <div class=\"modifier-dish-description-box\">\n                <div class=\"modifier-dish-name\">{{ dish.name }}</div>\n                <div class=\"modifier-dish-weight\" *ngIf=\"dish.weight\">{{ dish.weight * 1000 }} \u0433\u0440</div>\n            </div>\n            <div class=\"modifier-dish-price-box\">\n                <div [ngClass]=\"{'zero-price': !dish.price}\">\n                    <span>{{ dish.price }}</span> \u20BD\n                </div>\n            </div>\n            <div class=\"modifier-dish-action-box\">\n                <ng-container *ngIf=\"groupMinAmount <= 1 && groupMaxAmount == 1; else counterTemplate\">\n                    <ng-container *ngTemplateOutlet=\"modifierCheckboxTemplate; context: {\n                        modifier: modifier,\n                        groupId: groupId,\n                        amount: amount\n                    }\"></ng-container>\n                </ng-container>\n\n                <ng-template #counterTemplate>\n                    <ng-container *ngTemplateOutlet=\"modifierCounterTemplate; context: {\n                        modifier: modifier,\n                        groupId: groupId,\n                        amount: amount,\n                        groupAmount: groupAmount,\n                        groupMinAmount: groupMinAmount,\n                        groupMaxAmount: groupMaxAmount\n                    }\"></ng-container>\n                </ng-template>\n\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n\n<!-- Template block #modifierCounterTemplate -->\n\n<ng-template #modifierCounterTemplate\n             let-modifier=\"modifier\"\n             let-groupId=\"groupId\"\n             let-amount=\"amount\"\n             let-groupAmount=\"groupAmount\"\n             let-groupMinAmount=\"groupMinAmount\"\n             let-groupMaxAmount=\"groupMaxAmount\">\n    <ng-container>\n        <div class=\"modifier-counter\" [ngClass]=\"{disabled: !amount && groupAmount >= groupMaxAmount}\">\n            <div\n                    class=\"minus\"\n                    [ngClass]=\"{disabled: !amount || groupAmount <= groupMinAmount}\"\n                    (click)=\"changeModifierAmount(modifier, amount - 1, 'minus')\"\n                    onselectstart=\"return false;\">-</div>\n            <input [value]=\"amount\" readonly #input>\n            <div\n                    class=\"plus\"\n                    [ngClass]=\"{disabled: groupAmount >= groupMaxAmount}\"\n                    (click)=\"changeModifierAmount(modifier, amount + 1, 'plus')\"\n                    onselectstart=\"return false;\">+</div>\n        </div>\n    </ng-container>\n</ng-template>\n\n<!-- Template block #modifierCheckboxTemplate -->\n\n<ng-template #modifierCheckboxTemplate\n             let-modifier=\"modifier\"\n             let-groupId=\"groupId\"\n             let-amount=\"amount\">\n    <ng-container>\n        <div\n                class=\"modifier-checkbox\"\n                [ngClass]=\"{selected: amount}\"\n                (click)=\"changeModifierAmount(modifier, amount ? 0 : 1, 'checkbox')\"></div>\n    </ng-container>\n</ng-template>\n",
                    styles: ["@charset \"UTF-8\";.title-box{font-size:22px;line-height:25px;letter-spacing:2.4px;font-weight:700;color:#0a0909;text-transform:uppercase;position:fixed;width:calc(100% - 200px);margin-top:-70px;margin-left:40px;text-align:center}.view-box{position:fixed;width:300px;min-height:calc(100% - 280px);border-right:1px solid #e9e7e7;box-sizing:border-box;padding-right:20px}.settings-box{padding-left:320px}.dish{display:flex;flex-direction:column;align-items:center}.dish .dish-image-box{position:relative;width:250px;height:170px;box-sizing:border-box;text-align:center;background-color:#eee;background-size:50%}.dish .dish-description-box{height:170px;display:flex;flex-direction:column;align-items:stretch;padding:5px 0 0;box-sizing:border-box}.dish .dish-description-box .dish-name{font-weight:700;font-size:28px;line-height:32px;letter-spacing:2.4px;color:#0a0909}.dish .dish-description-box .dish-ingredients{font-size:15px;font-weight:500;line-height:17px;color:#000;margin-top:15px;overflow:hidden;flex-grow:1}.dish .dish-description-box .dish-price-box{font-weight:700;font-size:20px;line-height:23px;display:flex;align-items:center;justify-content:space-between;height:45px;margin-right:49px}.ng-cart-dish-calc-two-parts-assembled .dish{border:none;margin-left:0;padding-bottom:0}.ng-cart-dish-calc-two-parts-assembled .dish .dish-image-box{display:none}.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box{width:100%;height:auto}.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box .dish-name{text-align:center;font-weight:700;font-size:28px;line-height:32px;letter-spacing:2.4px;color:#0a0909;text-transform:uppercase}.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box .dish-ingredients,.ng-cart-dish-calc-two-parts-assembled .dish .dish-description-box .dish-price-box{display:none}.dish-image{width:250px;height:100%;border-radius:5px;background-size:cover;background-position:top;background-repeat:no-repeat}.result{margin-top:49px;font-weight:700;font-size:24px;line-height:28px;color:#0a0909;text-align:right}.result .price{margin-left:76px}.comment{padding-bottom:15px;border-top:1px solid #e9e7e7;margin-top:30px}.comment .title{font-weight:500;font-size:18px;line-height:20px;color:#0a0909;margin:30px 0 15px}.comment .input-box{margin-top:10px}.comment .input-box input{border:2px solid #969696;box-sizing:border-box;border-radius:10px;height:35px;line-height:35px;font-style:italic;font-weight:400;font-size:16px;color:#969696;padding:0 20px}.modifiers .modifier-group{margin-top:25px;padding-bottom:25px}.modifiers .modifier-header{margin-bottom:25px}.modifiers .modifier-header .modifier-name{font-weight:500;font-size:20px;line-height:23px;color:#0a0909;padding-bottom:12px;text-align:center;border-bottom:1px solid #000;margin:0 100px}.modifiers .modifier-header .modifier-description{font-size:15px;line-height:17px;color:#0a0909}.modifiers .modifier-dish{display:flex;justify-content:center;align-items:center;margin-bottom:2px;height:100px;box-sizing:border-box}.modifiers .modifier-dish .modifier-dish-image-box{position:relative;width:70px;height:70px;box-sizing:border-box;text-align:center;background-color:#fff;background-size:50%;margin-right:28px}.modifiers .modifier-dish .modifier-dish-image-box .dish-image{width:100%;height:100%;background-size:contain;background-position:center}.modifiers .modifier-dish .modifier-dish-description-box{flex-grow:1;display:flex;flex-direction:column;justify-content:center}.modifiers .modifier-dish .modifier-dish-description-box .modifier-dish-name{font-weight:500;font-size:16px;line-height:23px;color:#0a0909}.modifiers .modifier-dish .modifier-dish-description-box .modifier-dish-weight{font-size:16px;line-height:23px;color:#0a0909;margin-top:0}.modifiers .modifier-dish .modifier-dish-price-box{font-weight:700;font-size:16px;line-height:23px;color:#0a0909;margin-right:105px}.modifiers .modifier-dish .modifier-dish-price-box .zero-price{display:none}.modifiers .modifier-dish .modifier-dish-action-box{width:102px;display:flex;justify-content:flex-end}.two-parts-assembled-header{display:flex;align-items:center;justify-content:center;padding-bottom:28px;opacity:1;height:230px;overflow:hidden;transition:.5s}.two-parts-assembled-header.empty{border-bottom:none;height:0;opacity:0}.two-parts-assembled-header .selected-dish{display:flex;align-items:center;justify-content:flex-end;width:50%}.two-parts-assembled-header .selected-dish .image-box{width:113px;height:226px;overflow:hidden}.two-parts-assembled-header .selected-dish .image-box .dish-image{width:200%;height:100%}.two-parts-assembled-header .selected-dish:nth-child(2){flex-direction:row-reverse}.two-parts-assembled-header .selected-dish:nth-child(2) .image-box{direction:rtl}.two-parts-assembled-selected-dishes-names .selected-dish-item{display:flex}.two-parts-assembled-selected-dishes-names .selected-dish-item:first-child{margin-bottom:12px}.two-parts-assembled-selected-dishes-names .selected-dish-item .type-name{width:70px;font-weight:500;font-size:16px;color:#0a0909;content:'\u041B\u0435\u0432\u0430\u044F:'}.two-parts-assembled-selected-dishes-names .selected-dish-item .type-name:last-child{content:'\u041F\u0440\u0430\u0432\u0430\u044F:'}.two-parts-assembled-selected-dishes-names .selected-dish-item .dish-name{font-size:16px;color:#0a0909}.two-parts-assembled-selected-dishes-names .selected-dish-item .dish-name.empty{font-style:italic;font-weight:400;font-size:16px;color:#969696}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-name{font-weight:500;font-size:20px;line-height:23px;color:#0a0909;padding:20px 0}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list{display:grid;grid-template-columns:1fr 1fr 1fr;margin-top:30px;grid-column-gap:30px;grid-row-gap:24px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish{display:flex;flex-direction:column;align-items:center;box-sizing:border-box;cursor:pointer;color:#0a0909;border:1.5px solid rgba(255,255,255,0)}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish.selected{border:1.5px solid #0a0909;border-radius:15px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .dish-name{font-weight:500;font-size:12px;line-height:12px;letter-spacing:2.4px;text-transform:uppercase;text-align:center;padding:0 5px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .dish-price{font-weight:700;font-size:12px;line-height:15px;padding:5px 0 10px}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .image-box{width:168px;height:168px;border-radius:15px 15px 0 0}.two-parts-assembled .two-parts-assembled-body .two-parts-assembled-body-list .two-parts-assembled-body-list-dish .image-box .dish-image{width:100%;height:100%;border-radius:15px 15px 0 0}.modifier-fixed{border:2px solid #767676;box-sizing:border-box;border-radius:15px;display:flex;align-items:stretch;height:45px}.modifier-fixed .item{font-weight:500;font-size:20px;line-height:23px;width:142px;height:45px;color:#767676;display:flex;align-items:center;justify-content:center;margin-top:-2px}.modifier-fixed .item:first-child{margin-left:-2px}.modifier-fixed .item:last-child{margin-right:-2px}.modifier-fixed .item.selected{background:#0a0909;border-radius:15px;color:#fff}.modifier-fixed .item:not(.selected){cursor:pointer}.modifier-checkbox{width:50px;height:50px;background:#e0e0e0;border-radius:15px;cursor:pointer;display:flex;justify-content:center;align-items:center}.modifier-checkbox.selected:after{content:url(\"data:image/svg+xml; base64, PHN2ZyB3aWR0aD0iMjgiIGhlaWdodD0iMjgiIHZpZXdCb3g9IjAgMCAyOCAyOCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTIgMTMuNUwxMS4zMjMxIDI2TDI2IDIiIHN0cm9rZT0iYmxhY2siIHN0cm9rZS13aWR0aD0iMy41IiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiLz4KPC9zdmc+Cg==\")}.modifier-counter{display:flex;align-items:center;position:relative;border:none;width:102px;height:35px;border-radius:10px;background:#e0e0e0}.modifier-counter.disabled{opacity:.3}.modifier-counter:not(.disabled) .minus.disabled,.modifier-counter:not(.disabled) .plus.disabled{opacity:.15;cursor:default}.modifier-counter input{border:none;background:0 0;width:100%;padding:0;height:35px;line-height:35px;text-align:center;font-weight:500;font-size:18px;color:#0a0909}.modifier-counter .minus,.modifier-counter .plus{display:block;position:absolute;top:0;height:35px;line-height:35px;text-align:center;font-style:normal;font-weight:700;font-size:18px;color:#0a0909;padding:0 13px;cursor:pointer}.modifier-counter .minus:hover,.modifier-counter .plus:hover{color:#000}.modifier-counter .minus:active,.modifier-counter .plus:active{color:#cc0009}.modifier-counter .minus.loading,.modifier-counter .plus.loading{opacity:.2}.modifier-counter .minus{left:0}.modifier-counter .plus{right:0}.without-images .modifier-dish-image-box{display:none}.without-images .modifier-dish{height:70px}"]
                },] },
    ];
    /** @nocollapse */
    DishCalcLnComponent.ctorParameters = function () { return [
        { type: ng_restocart_service_1.NgRestoCartService },
        { type: ng_core_1.EventerService },
        { type: String, decorators: [{ type: core_1.Inject, args: ['ImageUrl',] }] }
    ]; };
    DishCalcLnComponent.propDecorators = {
        dish: [{ type: core_1.Input }],
        amount: [{ type: core_1.Input }],
        selectedModifiers: [{ type: core_1.Input }],
        validate: [{ type: core_1.Output }],
        amountDishToAdd: [{ type: core_1.Output }],
        comment: [{ type: core_1.Output }],
        totalPriceChange: [{ type: core_1.Output }],
        worningMessageChange: [{ type: core_1.Output }]
    };
    return DishCalcLnComponent;
}());
exports.DishCalcLnComponent = DishCalcLnComponent;
//# sourceMappingURL=data:application/json;base64,